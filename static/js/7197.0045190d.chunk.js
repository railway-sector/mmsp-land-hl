"use strict";(self.webpackChunkmmsp_land_hl=self.webpackChunkmmsp_land_hl||[]).push([[7197],{8350:(e,t,i)=>{i.d(t,{H:()=>f});var n=i(6326),r=i(46053),s=(i(81806),i(76460),i(47249),i(87990)),a=i(69098),o=i(42553),l=i(40565),u=i(6409),c=i(88205);let d=class extends((0,a.OU)(o.o)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,n.Cg)([(0,r.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"name",void 0),(0,n.Cg)([(0,r.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,u.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],d.prototype,"method",void 0),(0,n.Cg)([(0,r.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"value",void 0),(0,n.Cg)([(0,r.MZ)({type:[l.jz],json:{write:{isRequired:!0}}})],d.prototype,"bandIds",void 0),(0,n.Cg)([(0,r.MZ)({types:c.uy,json:{write:!0,origins:{"web-scene":{types:c.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],d.prototype,"renderer",void 0),d=(0,n.Cg)([(0,s.$)("esri.renderers.support.RasterPresetRenderer")],d);const f=e=>{const t=e;let i=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,n.Cg)([(0,r.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],i.prototype,"activePresetRendererName",void 0),(0,n.Cg)([(0,r.MZ)({type:[d],json:{name:"layerDefinition.presetRenderers",write:!0}})],i.prototype,"presetRenderers",void 0),i=(0,n.Cg)([(0,s.$)("esri.layers.mixins.RasterPresetRendererMixin")],i),i}},12482:(e,t,i)=>{i.d(t,{$7:()=>T,B:()=>S,Fo:()=>I,M7:()=>_,Q5:()=>A,Tq:()=>F,Up:()=>C,XF:()=>M,Ze:()=>y,bK:()=>l,bh:()=>f,id:()=>w,ky:()=>d,qt:()=>O,tW:()=>R,v9:()=>h,w7:()=>u,wF:()=>o,wS:()=>x,x:()=>p,xS:()=>b,ze:()=>c});var n=i(56002),r=i(31633),s=i(81478);function a(e){return e?O:F}function o(e,t){return null!==t&&void 0!==t&&t.mode?t.mode:a(e).mode}function l(e,t){return null!=t?t:a(e)}function u(e,t){var i;return o(null==e||null!==(i=e.hasZ)&&void 0!==i&&i,t)}function c(e,t){var i;return l(null==e||null!==(i=e.hasZ)&&void 0!==i&&i,t)}function d(e){const t=v(e);return u(e.geometry,t)}function f(e){const t=v(e),i=u(e.geometry,t);return{mode:i,offset:null!=t&&"on-the-ground"!==i?_(t):0,featureExpressionInfo:null===t||void 0===t?void 0:t.featureExpressionInfo}}function h(e){return m(e)||p(e)}function p(e){var t;return"0"===(null===e||void 0===e||null===(t=e.featureExpressionInfo)||void 0===t?void 0:t.expression)}function m(e){if(!e)return!1;if("on-the-ground"===e.mode)return!1;const t=null!==e&&void 0!==e&&e.featureExpressionInfo?e.featureExpressionInfo.expression:null;return!(!t||"0"===t)}function v(e){return e.layer&&"elevationInfo"in e.layer?e.layer.elevationInfo:null}const g=(0,n.B)((e,t,i)=>{if(!e)return 0;if("decimal-degrees"===t)return 0;const n="unknown"!==t&&t?t:"meters",s=(0,r.mq)(i);return s?(0,r.oU)(e,n,s):0});function y(e,t){return g(null===e||void 0===e?void 0:e.offset,null===e||void 0===e?void 0:e.unit,t)}function w(e,t,i){var n,r;if(null===i||void 0===i||!i.mode)return;const s=e.hasZ?e.z:0,a=y(i,e.spatialReference);switch(i.mode){case"absolute-height":return s-a;case"on-the-ground":return 0;case"relative-to-ground":return s-((null!==(n=t.elevationProvider.getElevation(e.x,e.y,s,e.spatialReference,"ground"))&&void 0!==n?n:0)+a);case"relative-to-scene":return s-((null!==(r=t.elevationProvider.getElevation(e.x,e.y,s,e.spatialReference,"scene"))&&void 0!==r?r:0)+a)}}function x(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return I(e,t.x,t.y,t.hasZ?t.z:0,t.spatialReference,i,n)}function b(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;return I(e,t[0],t[1],t.length>2?t[2]:0,i,n,r)}function I(e,t,i,n,r,s){let a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;if(null==s)return;const o=null!=a?a.mode:"absolute-height";if("on-the-ground"===o)return 0;const{absoluteZ:l}=A(t,i,n,r,e,s);return function(e,t,i,n,r,s,a,o){var l,u;const c=y(a,r);switch(o){case"absolute-height":return e-c;case"relative-to-ground":return e-((null!==(l=s.elevationProvider.getElevation(t,i,n,r,"ground"))&&void 0!==l?l:0)+c);case"relative-to-scene":return e-((null!==(u=s.elevationProvider.getElevation(t,i,n,r,"scene"))&&void 0!==u?u:0)+c)}}(l,t,i,n,r,e,a,o)}function A(e,t,i,n,r,s){const a=y(s,n);switch(s.mode){case"absolute-height":return{absoluteZ:i+a,elevation:0};case"on-the-ground":{var o;const i=null!==(o=r.elevationProvider.getElevation(e,t,0,n,"ground"))&&void 0!==o?o:0;return{absoluteZ:i,elevation:i}}case"relative-to-ground":{var l;const s=null!==(l=r.elevationProvider.getElevation(e,t,i,n,"ground"))&&void 0!==l?l:0;return{absoluteZ:i+s+a,elevation:s}}case"relative-to-scene":{var u;const s=null!==(u=r.elevationProvider.getElevation(e,t,i,n,"scene"))&&void 0!==u?u:0;return{absoluteZ:i+s+a,elevation:s}}}}function C(e,t){if(null==t)return!1;const{mode:i}=t;return null!=i&&("scene"===e&&"relative-to-scene"===i||"ground"===e&&"absolute-height"!==i)}function S(e,t,i){return i&&i.mode!==t?"".concat(e," only support ").concat(t," elevation mode"):null}function T(e,t,i){return(null===i||void 0===i?void 0:i.mode)===t?"".concat(e," do not support ").concat(t," elevation mode"):null}function R(e,t){return null!=(null===t||void 0===t?void 0:t.featureExpressionInfo)&&"0"!==t.featureExpressionInfo.expression?"".concat(e," do not support featureExpressionInfo"):null}function M(e,t){t&&e.warn(".elevationInfo=",t)}function _(e){var t;return(null!==(t=null===e||void 0===e?void 0:e.offset)&&void 0!==t?t:0)*(0,s.Ao)(null===e||void 0===e?void 0:e.unit)}const O={mode:"absolute-height",offset:0},F={mode:"on-the-ground",offset:null}},25213:(e,t,i)=>{i.d(t,{E9:()=>m,Tw:()=>h,X6:()=>p});var n=i(89379),r=i(3825),s=i(76797),a=i(19247),o=i(13312),l=i(23032),u=i(49653),c=i(54994),d=i(77725);async function f(e,t,i){var f,h,p,m,v,g,y,w,x,b;const I=(0,c.Dl)(e),{rasterFunction:A,sourceJSON:C}=t||{},S=A?JSON.stringify(A.rasterFunctionDefinition||A):null,T=(0,c.lF)((0,n.A)((0,n.A)({},I.query),{},{renderingRule:S,f:"json"})),R=(0,c.jV)(T,i);e=I.path;const M=C||await(0,r.A)(e,R).then(e=>e.data),_=M.hasRasterAttributeTable?(0,r.A)("".concat(e,"/rasterAttributeTable"),R):null,O=M.hasColormap?(0,r.A)("".concat(e,"/colormap"),R):null,F=M.hasHistograms?(0,r.A)("".concat(e,"/histograms"),R):null,P=M.currentVersion>=10.3?(0,r.A)("".concat(e,"/keyProperties"),R):null,k=M.hasMultidimensions?(0,r.A)("".concat(e,"/multidimensionalInfo"),R):null,D=await Promise.allSettled([_,O,F,P,k]);let N=null;if(M.minValues&&M.minValues.length===M.bandCount){N=[];for(let e=0;e<M.minValues.length;e++)N.push({min:M.minValues[e],max:M.maxValues[e],avg:M.meanValues[e],stddev:M.stdvValues[e]})}const E=s.A.fromJSON(M.extent),L=Math.ceil(E.width/M.pixelSizeX-.1),B=Math.ceil(E.height/M.pixelSizeY-.1),z=o.A.fromJSON(M.spatialReference||M.extent.spatialReference),J="fulfilled"===D[0].status?null===(f=D[0].value)||void 0===f?void 0:f.data:null,U=null!==J&&void 0!==J&&null!==(h=J.features)&&void 0!==h&&h.length?d.A.fromJSON(J):null,Z="fulfilled"===D[1].status?null===(p=D[1].value)||void 0===p?void 0:p.data.colormap:null,q=null!==Z&&void 0!==Z&&Z.length?Z:null,j="fulfilled"===D[2].status?null===(m=D[2].value)||void 0===m?void 0:m.data.histograms:null,H=null!==j&&void 0!==j&&null!==(v=j[0])&&void 0!==v&&null!==(v=v.counts)&&void 0!==v&&v.length?j:null,V="fulfilled"===D[3].status&&null!==(g=null===(y=D[3].value)||void 0===y?void 0:y.data)&&void 0!==g?g:{},G="fulfilled"===D[4].status?null===(w=D[4].value)||void 0===w?void 0:w.data.multidimensionalInfo:null,W=null!==G&&void 0!==G&&null!==(x=G.variables)&&void 0!==x&&x.length?G:null;W&&W.variables.forEach(e=>{var t,i;null!==(t=e.statistics)&&void 0!==t&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),null===(i=e.dimensions)||void 0===i||i.forEach(e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")})});const{defaultVariable:X,serviceDataType:Y}=M;X&&X!==V.DefaultVariable&&(V.DefaultVariable=X),(null===Y||void 0===Y?void 0:Y.includes("esriImageServiceDataTypeVector"))&&!Y.includes(V.DataType)&&(V.DataType=Y.replace("esriImageServiceDataType",""));let $=M.noDataValue;(null===(b=M.noDataValues)||void 0===b?void 0:b.length)&&M.noDataValues.some(e=>e!==$)&&($=M.noDataValues);const K=M.transposeInfo?new u.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new a.A({x:M.extent.xmin,y:M.extent.ymax,spatialReference:z}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(L,B))/Math.LN2-8)),transposeInfo:M.transposeInfo}):void 0;return new l.A({width:L,height:B,bandCount:M.bandCount,extent:s.A.fromJSON(M.extent),spatialReference:z,pixelSize:new a.A({x:M.pixelSizeX,y:M.pixelSizeY,spatialReference:z}),pixelType:M.pixelType.toLowerCase(),statistics:N,attributeTable:U,colormap:q,histograms:H,keyProperties:V,noDataValue:$,multidimensionalInfo:W,storageInfo:K})}function h(e,t,i){return f(e,{sourceJSON:t},i)}function p(e,t,i){return f(e,{rasterFunction:t},i)}function m(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},26855:(e,t,i)=>{i.d(t,{A:()=>u});var n,r=i(6326),s=i(46053),a=(i(81806),i(76460),i(47249),i(6409)),o=i(87990),l=i(75116);let u=n=class extends l.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new n({tolerance:this.tolerance})}};(0,r.Cg)([(0,a.e)({GCSShiftXform:"gcs-shift"})],u.prototype,"type",void 0),(0,r.Cg)([(0,s.MZ)()],u.prototype,"tolerance",void 0),u=n=(0,r.Cg)([(0,o.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],u)},29754:(e,t,i)=>{i.d(t,{A:()=>m});var n,r=i(6326),s=i(46053),a=(i(81806),i(76460),i(47249),i(6409)),o=i(28379),l=i(87990),u=i(17707),c=i(76797),d=i(19247),f=i(75116);function h(e,t,i){const{x:n,y:r}=t;if(i<2)return{x:e[0]+n*e[2]+r*e[4],y:e[1]+n*e[3]+r*e[5]};if(2===i){const t=n*n,i=r*r,s=n*r;return{x:e[0]+n*e[2]+r*e[4]+t*e[6]+s*e[8]+i*e[10],y:e[1]+n*e[3]+r*e[5]+t*e[7]+s*e[9]+i*e[11]}}const s=n*n,a=r*r,o=n*r,l=s*n,u=s*r,c=n*a,d=r*a;return{x:e[0]+n*e[2]+r*e[4]+s*e[6]+o*e[8]+a*e[10]+l*e[12]+u*e[14]+c*e[16]+d*e[18],y:e[1]+n*e[3]+r*e[5]+s*e[7]+o*e[9]+a*e[11]+l*e[13]+u*e[15]+c*e[17]+d*e[19]}}function p(e,t,i){const{xmin:n,ymin:r,xmax:s,ymax:a,spatialReference:o}=t;let l=[];if(i<2)l.push({x:n,y:a}),l.push({x:s,y:a}),l.push({x:n,y:r}),l.push({x:s,y:r});else{let e=10;for(let t=0;t<e;t++)l.push({x:n,y:r+(a-r)*t/(e-1)}),l.push({x:s,y:r+(a-r)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:n+(s-n)*t/e,y:r}),l.push({x:n+(s-n)*t/e,y:a})}l=l.map(t=>h(e,t,i));const u=l.map(e=>e.x),d=l.map(e=>e.y);return new c.A({xmin:Math.min.apply(null,u),xmax:Math.max.apply(null,u),ymin:Math.min.apply(null,d),ymax:Math.max.apply(null,d),spatialReference:o})}let m=n=class extends f.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:n}=t;if(null===i||void 0===i||!i.length||null===n||void 0===n||!n.length||i.length!==n.length)return null;const r=[];for(let s=0;s<i.length;s++)r.push(i[s]),r.push(n[s]);return r}writeForwardCoefficients(e,t,i){const n=[],r=[];for(let s=0;s<(null===e||void 0===e?void 0:e.length);s++)s%2==0?n.push(e[s]):r.push(e[s]);t.coeffX=n,t.coeffY=r}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,n,r,s,a]=e,o=n*a-s*r,l=s*r-n*a;return[(s*i-t*a)/o,(n*i-t*r)/l,a/o,r/l,-s/o,-n/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:n}=t;if(null===i||void 0===i||!i.length||null===n||void 0===n||!n.length||i.length!==n.length)return null;const r=[];for(let s=0;s<i.length;s++)r.push(i[s]),r.push(n[s]);return r}writeInverseCoefficients(e,t,i){const n=[],r=[];for(let s=0;s<(null===e||void 0===e?void 0:e.length);s++)s%2==0?n.push(e[s]):r.push(e[s]);t.inverseCoeffX=n,t.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=h(this.forwardCoefficients,e,this.polynomialOrder);return new d.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return p(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=h(this.inverseCoefficients,e,this.polynomialOrder);return new d.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return p(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new n({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,r.Cg)([(0,s.MZ)({json:{write:!0}})],m.prototype,"polynomialOrder",void 0),(0,r.Cg)([(0,s.MZ)()],m.prototype,"forwardCoefficients",void 0),(0,r.Cg)([(0,o.w)("forwardCoefficients",["coeffX","coeffY"])],m.prototype,"readForwardCoefficients",null),(0,r.Cg)([(0,u.K)("forwardCoefficients")],m.prototype,"writeForwardCoefficients",null),(0,r.Cg)([(0,s.MZ)({json:{write:!0}})],m.prototype,"inverseCoefficients",null),(0,r.Cg)([(0,o.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],m.prototype,"readInverseCoefficients",null),(0,r.Cg)([(0,u.K)("inverseCoefficients")],m.prototype,"writeInverseCoefficients",null),(0,r.Cg)([(0,s.MZ)()],m.prototype,"affectsPixelSize",null),(0,r.Cg)([(0,a.e)({PolynomialXform:"polynomial"})],m.prototype,"type",void 0),m=n=(0,r.Cg)([(0,l.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],m)},34033:(e,t,i)=>{i.d(t,{H:()=>n,Z:()=>r});const n=Symbol("isImageryTileGraphicOrigin");function r(e){return!!e&&n in e}},47197:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Ke});var n,r=i(89379),s=i(6326),a=i(16868),o=i(69098),l=i(50076),u=i(76460),c=i(77717),d=i(50346),f=i(68134),h=i(46053),p=i(40565),m=i(81806),v=(i(47249),i(87990)),g=i(57274),y=i(9465),w=i(34033);class x extends y.A{get[(n=w.H,g.Q)](){return this.layer}constructor(e){super(),this[n]=!0,this.type="imagery-tile",this.layer=e}get id(){return this.layer.id}}var b=i(25515),I=i(19502),A=i(65624),C=i(31362),S=i(24709),T=i(11270),R=i(94729),M=i(84008),_=i(8350),O=i(21617),F=i(5682),P=i(78817),k=i(95363),D=i(44135),N=i(51939),E=i(44038),L=i(17775),B=i(16175),z=i(10410),J=i(69539),U=i(76797),Z=i(13312),q=i(38042),j=i(66486),H=i(52297);function V(e){return["x","e","east","long","longitude"].includes(e.toLowerCase())}function G(e){return["y","n","west","lat","latitude"].includes(e.toLowerCase())}function W(e){const{axes:t}=e.domain,i=Object.keys(t),n=[],r=[];let s=-1,a=-1,o=[];for(let y=0;y<i.length;y++){const e=i[y];V(e)?s=y:G(e)&&(a=y);const l=t[e],u=[];if("values"in l){l.values.forEach(e=>u.push("string"==typeof e?new Date(e).getTime():e));const e=u[1]-u[0];n.push([u[0]-.5*e,u[u.length-1]+.5*e]),r.push(e)}else{const{start:e,stop:t,num:i}=l,s=(t-e)/(i-1);n.push([e-.5*s,t+.5*s]),r.push(s);for(let n=0;n<i;n++)u.push(e+s*n)}o.push({name:e,values:u,extent:[u[0],u[u.length-1]]})}s>-1&&-1===a?a=0===s?1:0:a>-1&&-1===s?s=0===a?1:0:-1===a&&-1===s&&(s=0,a=1),o=o.filter((e,t)=>!(t===s||t===a));const{referencing:l}=e.domain,u=l.find(e=>e.coordinates.includes(i[s])).system.id,c=null===u||void 0===u?void 0:u.slice(u.lastIndexOf("/")+1),d=null==c||"CRS84"===c?4326:Number(c),f=new Z.A({wkid:d}),[h,p]=n[s],[m,v]=n[a],g=new U.A({xmin:h,xmax:p,ymin:m,ymax:v,spatialReference:f});return{width:Math.round(g.width/r[s]),height:Math.round(g.height/r[a]),extent:g,dimensions:o}}function X(e){var t;const i=(0,q.lR)();return i&&null!==(t=e[i])&&void 0!==t?t:Object.values(e)[0]}function Y(){return Math.round(255*Math.random())}function $(e){const t={},{parameters:i}=e;if(!i)return t;for(const[s,a]of Object.entries(i)){var n;const{type:e,description:i,unit:o,categoryEncoding:l,observedProperty:u}=a;if("Parameter"===e&&(t[s]={},i&&(t[s].description=X(i)),o&&(t[s].unit=o.label?X(o.label):null,t[s].symbol=null===(n=o.symbol)||void 0===n?void 0:n.value),l)){var r;const e=Object.entries(l).map((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1}));let i=!1;(null===u||void 0===u||null===(r=u.categories)||void 0===r?void 0:r.length)&&(u.categories.forEach(t=>{if(!t.id)return;const n=t.id.slice(t.id.lastIndexOf("/")+1),r=e.find(e=>e.ClassName===n);if(!r)return;const s=t.label?X(t.label):null;if(r.Label=s,t.preferredColor){const e=J.A.fromHex(t.preferredColor);e&&(i=!0,r.Red=e.r,r.Green=e.g,r.Blue=e.b)}}),i&&e.forEach(e=>{null==e.Red&&(e.Red=Y(),e.Green=Y(),e.Blue=Y())}));const n={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:e.map(e=>({attributes:e}))};i&&n.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),t[s].attributeTable=n}}return t}function K(e){let t=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let n=0;n<e.length;n++){const r=e[n];null!=r&&(r<t&&(t=r),r>i&&(i=r))}return(0,H.X1)(t,i)}function Q(e,t,i){const n=e.map((e,i)=>({name:e,count:t[i]})).sort((e,t)=>e.name>t.name?-1:1),r=(s=1,e=>s*=e.count);var s;const a=[...n.slice(1),{name:"",count:1}].reverse().map(r).reverse();let o=0;for(let l=e.length-1;l>=0;l--)o+=a[n.findIndex(t=>{let{name:i}=t;return i===e[l]})]*(i%t[l]),i=Math.floor(i/t[l]);return o}var ee=i(15359),te=i(23032),ie=i(68347),ne=i(52494),re=i(86866);let se=class extends z.A{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._pixelBlockTiles){const{rasterInfo:r}=this,[s,a]=r.storageInfo.tileInfo.size,{sliceId:o}=n,{pixelBlocks:l}=this.source,u={pixelBlock:null==o?l[0]:l[o],useBilinear:"thematic"!==r.dataType,tileSize:{width:s,height:a},level:e,row:t,col:i},c=this.rasterJobHandler?this.rasterJobHandler.clipTile(u,n):(0,ne.J$)(u);return Promise.resolve(c)}const r=this._pixelBlockTiles.get("".concat(e,"/").concat(t,"/").concat(i));return Promise.resolve(r)}async _open(e){var t,i;const n=this.source,{pixelBlocks:s,attributeTable:a,statistics:o,histograms:l,name:u,nativeExtent:c,transform:d,colormap:f}=n,h=s[0],{width:p,height:m,pixelType:v}=h,g=null!==(t=n.extent)&&void 0!==t?t:new U.A({xmin:-.5,ymin:.5,xmax:p-.5,ymax:m-.5,spatialReference:new Z.A({wkid:3857})}),y=null!==(i=n.isPseudoSpatialReference)&&void 0!==i?i:!n.extent,w={x:g.width/p,y:g.height/m},x=(0,r.A)({},n.keyProperties);n.dataType&&(x.DataType=n.dataType),n.bandInfos&&(x.BandProperties=n.bandInfos.map(e=>e.toJSON())),a&&(x.DataType="Thematic");const b=new te.A({width:p,height:m,pixelType:v,extent:g,nativeExtent:c,attributeTable:a,colormap:f,transform:d,pixelSize:w,spatialReference:g.spatialReference,bandCount:h.pixels.length,keyProperties:x,multidimensionalInfo:n.multidimensionalInfo,statistics:o,isPseudoSpatialReference:y,histograms:l});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(b),this.createRemoteDatasetStorageInfo(b,512,512),this._set("rasterInfo",b),this.updateTileInfo(),b.multidimensionalInfo?await this._buildMDimStats(n.pixelBlocks,b.multidimensionalInfo):await this._buildInMemoryRaster(h,{width:512,height:512},e),b.multidimensionalInfo||(this.source=null),this.datasetName=u}async _buildInMemoryRaster(e,t,i){var n,r,s;const{rasterInfo:a}=this,o=null!==(n=a.storageInfo.maximumPyramidLevel)&&void 0!==n?n:0,u="thematic"!==a.dataType,c=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:o,useBilinear:u},i):Promise.resolve((0,ne.lD)(e,t,o,u)),f=null!=a.statistics,h=null!=a.histograms,p=this.ioConfig.skipStatistics||f?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,re.f4)(e)),m=await(0,d.Lx)([c,p]);if(!m[0].value&&m[1].value)throw new l.A("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=m[0].value,f||(a.statistics=null===(r=m[1].value)||void 0===r?void 0:r.statistics),h||(a.histograms=null===(s=m[1].value)||void 0===s?void 0:s.histograms)}async _buildMDimStats(e,t,i){for(let n=0;n<t.variables.length;n++){const r=t.variables[n];if(r.statistics)continue;const s=r.dimensions.map(e=>{var t,i,n;return new ee.A({variableName:r.name,dimensionName:e.name,values:[null!==(t=null===(i=e.values)||void 0===i?void 0:i[0])&&void 0!==t?t:null===(n=e.extent)||void 0===n?void 0:n[0]],isSlice:!0})}),a=(0,ie.NG)(s,t),o=null==a?null:e[a];if(null==o)continue;const l=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:o},i):(0,re.eH)(o);r.statistics=l.statistics,r.histograms||(r.histograms=l.histograms)}}};(0,s.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),(0,s.Cg)([(0,h.MZ)()],se.prototype,"source",void 0),(0,s.Cg)([(0,h.MZ)()],se.prototype,"url",null),se=(0,s.Cg)([(0,v.$)("esri.layers.support.rasterDatasets.InMemoryRaster")],se);const ae=se;var oe=i(77725);let le=class extends z.A{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _open(e){const{extent:t,pixelBlocks:i,multidimensionalInfo:n,attributeTable:r,bandNames:s}=await this._fetchData(e),{statistics:a,histograms:o}=(0,re.eH)(i[0]),l=null===s||void 0===s?void 0:s.map(e=>({BandName:e})),u={DataType:r?"Thematic":n?"Scientific":"Generic",BandProperties:l},c=new ae({source:{extent:t,pixelBlocks:i,attributeTable:r?oe.A.fromJSON(r):null,multidimensionalInfo:n,statistics:a,histograms:o,keyProperties:u,isPseudoSpatialReference:!1}});await c.open(),this._inMemoryRaster=c;const d=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",d.slice(0,d.indexOf("."))),this._set("rasterInfo",c.rasterInfo)}async _fetchData(e){var t,i,n,r;const s=null!==(t=this.source)&&void 0!==t?t:(await this.request(this.url,{signal:null===e||void 0===e?void 0:e.signal})).data,a="imagery-tile-layer:open-coverage-json";if("coverage"!==(null===(i=s.type)||void 0===i?void 0:i.toLowerCase())||"grid"!==(null===(n=s.domain)||void 0===n||null===(n=n.domainType)||void 0===n?void 0:n.toLowerCase()))throw new l.A(a,"Only coverage with Grid domain type is supported");if(!s.ranges)throw new l.A(a,"Missing ranges in the grid coverage data");if(null===(r=s.domain.referencing)||void 0===r||!r.length)throw new l.A(a,"Missing domain referencing in the grid coverage data");const o=Object.values(s.ranges);for(let u=0;u<o.length;u++){const{axisNames:e,shape:t,type:i,values:n}=o[u];if(!("ndarray"===i.toLowerCase()&&null!==n&&void 0!==n&&n.length&&null!==e&&void 0!==e&&e.length&&null!==t&&void 0!==t&&t.length))throw new l.A(a,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!V(e[e.length-1])||!G(e[e.length-2]))throw new l.A(a,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return function(e){var t;const{width:i,height:n,extent:r,dimensions:s}=W(e),{ranges:a}=e,o=Object.keys(a).sort((e,t)=>e<t?-1:1),l=[];for(let h=0;h<o.length;h++){const e=o[h];(null===s||void 0===s?void 0:s.length)&&l.push({name:e,dimensions:s})}const u=$(e);l.forEach(e=>u[e.name]&&Object.assign(e,u[e.name]));const c=l.length?{variables:l}:void 0,d=[];for(let h=0;h<o.length;h++){const e=o[h],{values:t,dataType:r,axisNames:l,shape:u}=a[e],c=u.length>2?h*u.slice(0,-2).reduce((e,t)=>e*t):0,f=l.slice(0,-2),p=u.slice(0,-2),m="float"===r?"f32":K(t),v=i*n,g=t.length/v;for(let a=0;a<g;a++){const e=j.A.createEmptyBand(m,v),r=new Uint8Array(v).fill(255);let o=!1;const l=a*v;for(let i=0;i<v;i++){const n=t[l+i];null==n?(r[i]=0,o=!0):e[i]=n}if(0===h||null!==s&&void 0!==s&&s.length){const t=new j.A({width:i,height:n,mask:o?r:null,pixels:[e],pixelType:m});t.updateStatistics(),null!==s&&void 0!==s&&s.length?d[Q(f,p,a)+c]=t:d.push(t)}else{const t=d[a];t.pixels.push(e),o?t.mask&&(t.mask=j.A.combineBandMasks([t.mask,r])):t.mask=o?r:null}}}const f=null===(t=Object.values(u).find(e=>e.attributeTable))||void 0===t?void 0:t.attributeTable;return{extent:r,pixelBlocks:d,multidimensionalInfo:c,attributeTable:f,bandNames:c?void 0:o}}(s)}};(0,s.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),(0,s.Cg)([(0,h.MZ)({constructOnly:!0})],le.prototype,"source",void 0),le=(0,s.Cg)([(0,v.$)("esri.layers.support.rasterDatasets.CovJSONRaster")],le);const ue=le;var ce=i(18690),de=i(80963),fe=i(86769),he=i(29754);function pe(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function me(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new Z.A({wkid:t});if(e=String(e).trim(),(0,de.jp)(e))return new Z.A({wkt2:e});const i=e.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const n=i.indexOf("VERTCS"),r=i.indexOf("PROJCS"),s=r>-1?r:i.indexOf("GEOGCS");if(-1===s)return null;const a=e.slice(s,e.lastIndexOf("]",n)+1).trim(),o=e.slice(n,e.lastIndexOf("]")).trim();t=ve(a);const l=new Z.A(t?{wkid:t}:{wkt:a}),u=ve(o);return u&&(l.vcsWkid=u),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(t=ve(e),new Z.A(0!==t?{wkid:t}:{wkt:e})):null}function ve(e){var t;const i=e.replaceAll("]","[").replaceAll('"',"").split("[").map(e=>e.trim()).filter(e=>""!==e),n=i[i.length-1].split(","),r=null===(t=n[0])||void 0===t?void 0:t.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function ge(e){var t;if("pamdataset"!==(null===e||void 0===e||null===(t=e.documentElement.tagName)||void 0===t?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if((0,fe.g7)(e,"SRS")){if(!i.spatialReference){const t=(0,fe.mX)(e);i.spatialReference=me(t)}}else if((0,fe.g7)(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=function(e){var t;const i=(0,fe.V6)(e,"GeodataXform"),n=me((0,fe.v7)(i,"SpatialReference/WKID")||(0,fe.mX)(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const r=null!==(t=(0,fe.v7)(i,"PolynomialOrder"))&&void 0!==t?t:1,s=(0,fe.Ui)(i,"CoeffX/Double"),a=(0,fe.Ui)(i,"CoeffY/Double"),o=(0,fe.Ui)(i,"InverseCoeffX/Double"),l=(0,fe.Ui)(i,"InverseCoeffY/Double"),u=pe(s,a),c=pe(o,l);return{spatialReference:n,transform:u&&c&&u.length&&c.length?new he.A({spatialReference:n,polynomialOrder:r,forwardCoefficients:u,inverseCoefficients:c}):null}}(e);i.transform=n,i.spatialReference||(i.spatialReference=t)}else(0,fe.IC)(e,"MDI").forEach(e=>i.metadata[e.getAttribute("key")]=(0,fe.mX)(e));else if((0,fe.g7)(e,"PAMRasterBand")){const t=function(e){var t;const i=(0,fe.v7)(e,"NoDataValue"),n=(0,fe.V6)(e,"Histograms/HistItem"),r=(0,fe.v7)(n,"HistMin"),s=(0,fe.v7)(n,"HistMax"),a=(0,fe.v7)(n,"BucketCount"),o=null===(t=(0,fe.mX)(n,"HistCounts"))||void 0===t?void 0:t.split("|").map(e=>Number(e));let l,u,c,d;(0,fe.IC)(e,"Metadata/MDI").forEach(e=>{var t;const i=Number(null!==(t=e.textContent)&&void 0!==t?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":u=i;break;case"STATISTICS_MEAN":c=i;break;case"STATISTICS_STDDEV":d=i}});const f=(0,fe.v7)(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!==o&&void 0!==o&&o.length&&null!=r&&null!=s?{min:r,max:s,size:a||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=u?{min:l,max:u,avg:c,stddev:d}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}});const n=i.rasterBands;if(n.length){const e=!!n[0].statistics;i.statistics=e?n.map(e=>e.statistics).filter(ce.Ru):null;const t=!!n[0].histogram;i.histograms=t?n.map(e=>e.histogram).filter(ce.Ru):null}return i}var ye=i(93982);let we=class extends z.A{fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _open(e){const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:r,transform:s}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new Z.A({wkid:3857})),(null===r||void 0===r?void 0:r.length)&&null==n&&(n=(0,re.Pg)(r));const{width:o,height:l}=t;let u=new U.A({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const c=s?s.forwardTransform(u):u;let d=!0;if(s){const e=s.forwardCoefficients;d=e&&0===e[1]&&0===e[2],d&&(s=null,u=c)}const f=new ae({source:{extent:c,nativeExtent:u,transform:s,pixelBlocks:[t],statistics:n,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=(0,ye.g)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new l.A("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const n=i.toLowerCase(),r="gif"===n||"bmp"===n||!(0,m.A)("ios"),s=await this.decodePixelBlock(t,{format:n,useCanvas:r,hasNoZlibMask:!0});if(null==s)throw new l.A("image-aux-raster:open","the data cannot be decoded");return s}async _fetchAuxiliaryData(e){var t;const i=null===e||void 0===e?void 0:e.signal,{skipExtensions:n=[],skipMapInfo:r}=this.ioConfig,s=r||n.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:i}),a=this.datasetFormat,o="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,l=o&&n.includes(o)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:i}),u=await(0,d.Lx)([s,l]);if(null!==i&&void 0!==i&&i.aborted)throw(0,d.NK)();const c=ge(null===(t=u[0].value)||void 0===t?void 0:t.data);if(!c.transform){const e=u[1].value?u[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;c.transform=6===(null===e||void 0===e?void 0:e.length)?new he.A({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return c}};(0,s.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],we.prototype,"datasetFormat",void 0),we=(0,s.Cg)([(0,v.$)("esri.layers.support.rasterDatasets.ImageAuxRaster")],we);const xe=we;var be=i(30726),Ie=i(90534),Ae=i(19247),Ce=i(49653),Se=i(88235),Te=i(82356),Re=i(26855),Me=i(25213);let _e=class extends z.A{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(e,t,i){var n;let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{storageInfo:a,extent:o}=this.rasterInfo,{transposeInfo:l}=a,u=null!=l&&!!s.transposedVariableName;if(this._slices&&!u&&null==s.sliceId)return null;const c=u?0:a.maximumPyramidLevel-e+this._levelOffset,d="".concat(this.url,"/tile/").concat(c,"/").concat(t,"/").concat(i),f=this._slices?u?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null;let h,p;if(a.isBsqTile){var m;const e=(null!==(m=s.bandIds)&&void 0!==m&&m.length?s.bandIds:[0,1,2]).map(e=>this.request(d,{query:(0,r.A)((0,r.A)({},f),{},{bandId:e}),responseType:"array-buffer",signal:s.signal})),t=await Promise.all(e),i=t.map(e=>e.data.byteLength).reduce((e,t)=>e+t),n=new Uint8Array(i);p=[];let a=0;for(const{data:r}of t)p.push(a),n.set(new Uint8Array(r),a),a+=r.byteLength;h=n.buffer}else h=(await this.request(d,{query:f,responseType:"array-buffer",signal:s.signal})).data;if(!h)return null;const v=u?l.tileSize:a.tileInfo.size,g=await this.decodePixelBlock(h,{width:v[0],height:v[1],planes:null===(n=p)||void 0===n?void 0:n.length,offsets:p,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:u,noDataValue:this.rasterInfo.noDataValue});if(null==g)return null;const y=a.blockBoundary[e];if("jpg"!==a.compression||i>y.minCol&&i<y.maxCol&&t>y.minRow&&t<y.maxRow)return g;const{origin:w,blockWidth:x,blockHeight:b}=a,{x:I,y:A}=this.getPyramidPixelSize(e),C=Math.round((o.xmin-w.x)/I)%x,S=Math.round((o.xmax-w.x)/I)%x||x,T=Math.round((w.y-o.ymax)/A)%b,R=Math.round((w.y-o.ymin)/A)%b||b,M=i===y.minCol?C:0,_=t===y.minRow?T:0,O=i===y.maxCol?S:x,F=t===y.maxRow?R:b;return(0,ne.z$)(g,{x:M,y:_},{width:O-M,height:F-_}),g}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some(e=>{const i=t.find(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName);return!i||(Array.isArray(e.values[0])?"".concat(e.values[0][0],"-").concat(e.values[0][1]):e.values[0])!==(Array.isArray(i.values[0])?"".concat(i.values[0][0],"-").concat(i.values[0][1]):i.values[0])}))return i}return null}async fetchVariableStatisticsHistograms(e,t){var i;const n=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics}),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms}),s=await Promise.all([n,r]);return s[0]&&s[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),null!==(i=s[1])&&void 0!==i&&null!==(i=i[0])&&void 0!==i&&null!==(i=i.counts)&&void 0!==i&&i.length||(s[1]=null),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let n=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let s=r-n+this._levelOffset;const a=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch(o){}if(s--,n++,i=this.identifyPixelLocation(a,n,t.datumTransformation),null===i)return null}return-1===s||null==i?null:n}async _open(e){var t,i,n,s,a;const o=null===e||void 0===e?void 0:e.signal,u=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:o});u.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const c=u.data;if(this.sourceJSON=c,!c)throw new l.A("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!c.tileInfo)throw new l.A("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=c.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(c.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===c.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=null!==(t=null===(i=c.name)||void 0===i?void 0:i.slice(c.name.indexOf("/")+1))&&void 0!==t?t:"";const d=await this._fetchRasterInfo({signal:o});if(null==d)throw new l.A("image-server-raster:open","cannot initialize image service");(0,Me.E9)(d,c);const f="Map"===this.tileType?function(e,t){if(!e)return null;const{minScale:i,maxScale:n,minLOD:s,maxLOD:a}=t;if(null!=s&&null!=a)return Se.A.fromJSON((0,r.A)((0,r.A)({},e),{},{lods:e.lods.filter(e=>{let{level:t}=e;return null!=t&&t>=s&&t<=a})}));if(0!==i&&0!==n){const t=e=>Math.round(1e4*e)/1e4,s=i?t(i):1/0,a=n?t(n):-1/0;return Se.A.fromJSON((0,r.A)((0,r.A)({},e),{},{lods:e.lods.filter(e=>{const i=t(e.scale);return i<=s&&i>=a})}))}return Se.A.fromJSON(e)}(c.tileInfo,c):Se.A.fromJSON(c.tileInfo);(0,be.Lw)(f);const[h,p]=this._computeMinMaxLOD(d,f),{extent:m,pixelSize:v}=d,g=.5/d.width*v.x,y=Math.max(v.x,v.y),{lods:w}=f;("Map"!==this.tileType&&0!==c.maxScale||Math.abs(v.x-v.y)>g||!w.some(e=>Math.abs(e.resolution-y)<g))&&(v.x=v.y=h.resolution,d.width=Math.ceil((m.xmax-m.xmin)/v.x-.1),d.height=Math.ceil((m.ymax-m.ymin)/v.y-.1));const x=h.level-p.level,[b,I]=f.size,A=[],C=[];w.forEach((e,t)=>{e.level>=p.level&&e.level<=h.level&&A.push({x:e.resolution,y:e.resolution}),t<w.length-1&&C.push(Math.round(10*e.resolution/w[t+1].resolution)/10)}),A.sort((e,t)=>e.x-t.x);const S=this.computeBlockBoundary(m,b,I,f.origin,A,x),T=A.length>1?A.slice(1):null;let R;c.transposeInfo&&(R={tileSize:[c.transposeInfo.rows,c.transposeInfo.cols],packetSize:null!==(n=null===(s=d.keyProperties)||void 0===s?void 0:s._yxs.PacketSize)&&void 0!==n?n:0});const M=C.length<=1||C.length>=3&&C.slice(0,-1).every(e=>e===C[0])?null!==(a=C[0])&&void 0!==a?a:2:Math.round(10/(p.resolution/h.resolution)**(-1/x))/10;if(d.storageInfo=new Ce.A({blockWidth:f.size[0],blockHeight:f.size[1],pyramidBlockWidth:f.size[0],pyramidBlockHeight:f.size[1],pyramidResolutions:T,pyramidScalingFactor:M,compression:f.format,origin:f.origin,firstPyramidLevel:1,maximumPyramidLevel:x,tileInfo:f,isBsqTile:!!c.bsq,transposeInfo:R,blockBoundary:S}),function(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&(null===i||void 0===i?void 0:i.wkid)&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Re.A,e.extent=e.transform.forwardTransform(t))}(d),this._set("rasterInfo",d),c.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:d.storageInfo.tileInfo,parsedUrl:(0,Ie.An)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Te.d({layer:e})}}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),n=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=Z.A.fromJSON(t.spatialReference||e.spatialReference),s=new Ae.A({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new te.A({width:i,height:n,bandCount:3,extent:U.A.fromJSON(e),spatialReference:r,pixelSize:s,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,n=(0,Me.Tw)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request("".concat(this.url,"/slices"),{query:{f:"json"},signal:i}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.slices}).catch(()=>null):null,s=await Promise.all([n,r]);return this._slices=s[1],s[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_computeMinMaxLOD(e,t){var i,n;const{pixelSize:r}=e,s=.5/e.width*r.x,{lods:a}=t,o=t.lodAt(Math.max.apply(null,a.map(e=>e.level))),l=t.lodAt(Math.min.apply(null,a.map(e=>e.level))),{tileType:u}=this;if("Map"===u)return this._levelOffset=a[0].level,[o,l];var c;if("Raster"===u)return[null!==(c=a.find(e=>e.resolution===r.x))&&void 0!==c?c:o,l];const{minScale:d,maxScale:f}=this.sourceJSON;let h=o;f>0&&(h=a.find(e=>Math.abs(e.scale-f)<s),h||(h=null!==(i=a.filter(e=>e.scale>f).sort((e,t)=>e.scale>t.scale?1:-1)[0])&&void 0!==i?i:o));let p=l;return d>0&&(p=null!==(n=a.find(e=>Math.abs(e.scale-d)<s))&&void 0!==n?n:l,this._levelOffset=p.level-l.level),[h,p]}};(0,s.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],_e.prototype,"datasetFormat",void 0),(0,s.Cg)([(0,h.MZ)()],_e.prototype,"tileType",void 0),_e=(0,s.Cg)([(0,v.$)("esri.layers.support.rasterDatasets.ImageServerRaster")],_e);const Oe=_e;var Fe=i(10798);const Pe=new Map;Pe.set("Int8","s8"),Pe.set("UInt8","u8"),Pe.set("Int16","s16"),Pe.set("UInt16","u16"),Pe.set("Int32","s32"),Pe.set("UInt32","u32"),Pe.set("Float32","f32"),Pe.set("Float64","f32"),Pe.set("Double64","f32");const ke=new Map;ke.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ke.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ke.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ke.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"}),ke.set("qb3",{blobExtension:".pq3",isOneSegment:!0,decoderFormat:"qb3"});let De=class extends z.A{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{blockWidth:r,blockHeight:s,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:l,pixelType:u}=this.rasterInfo,{ranges:c,actualTileWidth:d,actualTileHeight:f}=this._getTileLocation(e,t,i);if(!c||0===c.length)return null;if(0===c[0].from&&0===c[0].to){const e=new Uint8Array(r*s);return new j.A({width:r,height:s,pixels:void 0,mask:e,validPixelCount:0})}const{bandIds:h}=this.ioConfig,p=this._getBandSegmentCount(),m=[];let v=0;for(v=0;v<p;v++)h&&!h.includes(v)||m.push(this.request(this._files.data,{range:{from:c[v].from,to:c[v].to},responseType:"array-buffer",signal:n.signal}));const g=await Promise.all(m),y=g.map(e=>e.data.byteLength).reduce((e,t)=>e+t),w=new Uint8Array(y),x=[];let b=0;for(v=0;v<p;v++)x.push(b),w.set(new Uint8Array(g[v].data),b),b+=g[v].data.byteLength;const I=ke.get(this.rasterInfo.storageInfo.compression).decoderFormat,A=await this.decodePixelBlock(w.buffer,{width:r,height:s,format:I,planes:(null===h||void 0===h?void 0:h.length)||l,offsets:x,pixelType:u}).catch(()=>null);if(null==A)return null;let{noDataValue:C}=this.rasterInfo;if(null!=C&&"lerc"!==I&&!A.mask&&(C=C[0],null!=C)){const e=A.width*A.height,t=new Uint8Array(e);if(Math.abs(C)>1e24)for(v=0;v<e;v++)Math.abs((A.pixels[0][v]-C)/C)>1e-6&&(t[v]=1);else for(v=0;v<e;v++)A.pixels[0][v]!==C&&(t[v]=1);A.mask=t}let S=0,T=0;if(d!==r||f!==s){let e=A.mask;if(e)for(v=0;v<s;v++)if(T=v*r,v<f)for(S=d;S<r;S++)e[T+S]=0;else for(S=0;S<r;S++)e[T+S]=0;else for(e=new Uint8Array(r*s),A.mask=e,v=0;v<f;v++)for(T=v*r,S=0;S<d;S++)e[T+S]=1}return A}async _open(e){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?e.signal:null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:n,files:r}=this._parseHeader(i.data),{skipMapInfo:s,skipExtensions:a=[]}=this.ioConfig;if(!a.includes("aux.xml")&&!s){var o;const t=await this._fetchAuxiliaryData(e);null!=t&&(n.statistics=null!==(o=t.statistics)&&void 0!==o?o:n.statistics,n.histograms=t.histograms,t.histograms&&null==n.statistics&&(n.statistics=(0,re.Pg)(t.histograms)))}s&&this.updateImageSpaceRasterInfo(n),this._set("rasterInfo",n),this._files=r;const l=await this.request(r.index,{responseType:"array-buffer",signal:t});this._storageIndex=function(e){if(e.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,i,n,r,s,a;if(Fe.Z){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),n=new Uint8Array(r),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)n[4*s+a]=i[4*s+3-a];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}(l.data);const{blockWidth:u,blockHeight:c}=this.rasterInfo.storageInfo,d=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:h}=this.rasterInfo,p=[],m=this._getBandSegmentCount();let v=0,g=-1;for(;v<this._storageIndex.length;){g++;const e=Math.ceil(f/u/d**g)-1,t=Math.ceil(h/c/d**g)-1;v+=(e+1)*(t+1)*m*4,p.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,g>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=g),this.updateTileInfo()}_getBandSegmentCount(){return ke.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:r,pyramidScalingFactor:s}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let u,c,d,f=0,h=0;for(d=0;d<e;d++)h=s**d,u=Math.ceil(a/n/h),c=Math.ceil(o/r/h),f+=u*c;h=s**e,u=Math.ceil(a/n/h),c=Math.ceil(o/r/h),f+=t*u+i,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let m=0,v=0;const g=[];for(let y=0;y<l;y++)m=p[4*y]*2**32+p[4*y+1],v=m+p[4*y+2]*2**32+p[4*y+3]-1,g.push({from:m,to:v});return{ranges:g,actualTileWidth:i<u-1?n:Math.ceil(a/h)-n*(u-1),actualTileHeight:t<c-1?r:Math.ceil(o/h)-r*(c-1)}}_parseHeader(e){const t=(0,fe.V6)(e,"MRF_META/Raster");if(!t)throw new l.A("mrf:open","not a valid MRF format");const i=(0,fe.V6)(t,"Size"),n=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),s=parseInt(i.getAttribute("c"),10),a=((0,fe.mX)(t,"Compression")||"none").toLowerCase();if(!ke.has(a))throw new l.A("mrf:open","currently does not support compression "+a);const o=(0,fe.mX)(t,"DataType")||"UInt8",u=Pe.get(o);if(null==u)throw new l.A("mrf:open","currently does not support pixel type "+o);const c=(0,fe.V6)(t,"PageSize"),d=parseInt(c.getAttribute("x"),10),f=parseInt(c.getAttribute("y"),10),h=(0,fe.V6)(t,"DataValues");let p,m;if(h&&(m=h.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map(e=>parseFloat(e)))),(0,fe.V6)(e,"MRF_META/CachedSource"))throw new l.A("mrf:open","currently does not support MRF referencing other data files");const v=(0,fe.V6)(e,"MRF_META/GeoTags"),g=(0,fe.V6)(v,"BoundingBox");let y,w=!1;if(null!=g){var x;const e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),i=parseFloat(g.getAttribute("maxx")),n=parseFloat(g.getAttribute("maxy")),r=(0,fe.mX)(v,"Projection")||"";let s=Z.A.WGS84;if("LOCAL_CS[]"!==r)if(r.toLowerCase().startsWith("epsg:")){const e=Number(r.slice(5));isNaN(e)||0===e||(s=new Z.A({wkid:e}))}else s=null!==(x=me(r))&&void 0!==x?x:Z.A.WGS84;else w=!0,s=new Z.A({wkid:3857});y=new U.A(e,t,i,n),y.spatialReference=s}else w=!0,y=new U.A({xmin:-.5,ymin:.5-r,xmax:n-.5,ymax:.5,spatialReference:new Z.A({wkid:3857})});const b=(0,fe.V6)(e,"MRF_META/Rsets"),I=parseInt((null===b||void 0===b?void 0:b.getAttribute("scale"))||"2",10),A=y.spatialReference,C=new Ce.A({origin:new Ae.A({x:y.xmin,y:y.ymax,spatialReference:A}),blockWidth:d,blockHeight:f,pyramidBlockWidth:d,pyramidBlockHeight:f,compression:a,pyramidScalingFactor:I}),S=new Ae.A({x:y.width/n,y:y.height/r,spatialReference:A}),T=new te.A({width:n,height:r,extent:y,isPseudoSpatialReference:w,spatialReference:A,bandCount:s,pixelType:u,pixelSize:S,noDataValue:p,storageInfo:C}),R=(0,fe.mX)(e,"datafile"),M=(0,fe.mX)(e,"IndexFile");return{rasterInfo:T,files:{mrf:this.url,index:M||this.url.replace(".mrf",".idx"),data:R||this.url.replace(".mrf",ke.get(a).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return ge(t)}catch(t){return null}}};(0,s.Cg)([(0,h.MZ)()],De.prototype,"_files",void 0),(0,s.Cg)([(0,h.MZ)()],De.prototype,"_storageIndex",void 0),(0,s.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],De.prototype,"datasetFormat",void 0),De=(0,s.Cg)([(0,v.$)("esri.layers.support.rasterDatasets.MRFRaster")],De);const Ne=De;var Ee=i(50611);function Le(e){const t=e.fields,i=e.records,n=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",r=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),s=r.map(e=>e.name),a=[];let o=0,l=0;return i.forEach(e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})}),{displayFieldName:"",fields:r,features:a}}class Be{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),r=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:i,recordCount:n,headerByteCount:r,recordByteCount:s};let o=32;const l=[],u=[];let c;if(3===i){for(;13!==t.getUint8(o);)c=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,Ee.w)(new Uint8Array(e,o,11)),type:c,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(c)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<n&&e.byteLength-o>s;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if("C"===t.type)i.push((0,Ee.w)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.slice(0,4),10),parseInt(n.slice(4,6),10)-1,parseInt(n.slice(6,8),10)))}o+=t.length}),u.push(i)):o+=s}}return{header:a,fields:l,records:u,recordSet:Le({fields:l,records:u})}}}var ze=i(87018),Je=i(75374);const Ue=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i?void 0:i.values},Ze=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0]};let qe=class extends z.A{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this._chunkSize=10485760,this.datasetFormat="TIFF"}async fetchRawTile(e,t,i){var n;let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null===(n=this._headerInfo)||void 0===n||!n.isSupported||this.isBlockOutside(e,t,i))return null;const s=await this._fetchRawTiffTile(e,t,i,!1,r);if(null!=s&&this._headerInfo.hasMaskBand){const n=await this._fetchRawTiffTile(e,t,i,!0,r);null!=n&&n.pixels[0]instanceof Uint8Array&&(s.mask=n.pixels[0])}return s}async _open(e){var t,i;const n=e?e.signal:null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:n});if(!s)throw new l.A("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:a,firstIFDPos:o,isBigTiff:c}=(0,ze.uT)(s),d=[],f={fileChunk:s,posIFD:o,fileOffset:0};await this._readIFDs(d,f,a,c?8:4,n);const{imageInfo:h,rasterInfo:p}=function(e){var t,i;const n=(0,ze.uc)(e),{width:s,height:a,tileWidth:o,tileHeight:l,planes:u,pixelType:c,compression:d,firstPyramidLevel:f,maximumPyramidLevel:h,pyramidBlockWidth:p,pyramidBlockHeight:m,pyramidResolutions:v,tileBoundary:g,affine:y,metadata:w}=n,x=(null===(t=n.extent.spatialReference)||void 0===t?void 0:t.wkt)||(null===(i=n.extent.spatialReference)||void 0===i?void 0:i.wkid);let b=me(x),I=!!n.isPseudoGeographic;null==b&&(I=!0,b=new Z.A({wkid:3857}));const A=new U.A((0,r.A)((0,r.A)({},n.extent),{},{spatialReference:b})),C=new Ae.A(A?{x:A.xmin,y:A.ymax,spatialReference:b}:{x:0,y:0}),S=new Ce.A({blockWidth:o,blockHeight:l,pyramidBlockWidth:p,pyramidBlockHeight:m,compression:d,origin:C,firstPyramidLevel:f,maximumPyramidLevel:h,pyramidResolutions:v,blockBoundary:g}),T=new Ae.A({x:(A.xmax-A.xmin)/s,y:(A.ymax-A.ymin)/a,spatialReference:b}),R=w?{BandProperties:w.bandProperties,DataType:w.dataType}:{};let M=null;const _=Ze(e[0],"PHOTOMETRICINTERPRETATION"),O=Ue(e[0],"COLORMAP");if(_<=3&&(null===O||void 0===O?void 0:O.length)>3&&O.length%3==0){M=[];const e=O.length/3;for(let t=0;t<e;t++)M.push([t,O[t]>>>8,O[t+e]>>>8,O[t+2*e]>>>8])}const F=new te.A({width:s,height:a,bandCount:u,pixelType:c,pixelSize:T,storageInfo:S,spatialReference:b,isPseudoSpatialReference:I,keyProperties:R,extent:A,colormap:M,statistics:w?w.statistics:null});if(null!==y&&void 0!==y&&y.length&&(F.nativeExtent=new U.A({xmin:-.5,ymin:.5-a,xmax:s-.5,ymax:.5,spatialReference:b}),F.transform=new he.A({polynomialOrder:1,forwardCoefficients:[y[2]+y[0]/2,y[5]-y[3]/2,y[0],y[3],-y[1],-y[4]]}),F.extent=F.transform.forwardTransform(F.nativeExtent),F.pixelSize=new Ae.A({x:(A.xmax-A.xmin)/s,y:(A.ymax-A.ymin)/a,spatialReference:b}),S.origin.x=-.5,S.origin.y=.5),v){const{x:e,y:t}=F.pixelSize;v.forEach(i=>{i.x*=e,i.y*=t})}return{imageInfo:n,rasterInfo:F}}(d),m=(0,ze.zS)(d),v=(0,ze.r9)(d);if(this._headerInfo=(0,r.A)({littleEndian:a,isBigTiff:c,ifds:d,pyramidIFDs:m,maskIFDs:v},h),this._set("rasterInfo",p),!h.isSupported)throw new l.A("tiffraster:open","this tiff is not supported: "+h.message);if(!h.tileWidth)throw new l.A("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");p.isPseudoSpatialReference&&u.A.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const g=null===(t=d[0].get("PREDICTOR"))||void 0===t||null===(t=t.values)||void 0===t?void 0:t[0];if(3===(null===(i=d[0].get("SAMPLEFORMAT"))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0])&&2===g)throw new l.A("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:y,skipExtensions:w=[]}=this.ioConfig;if(!w.includes("aux.xml")&&!y){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&function(e,t){var i;if(t.statistics=null!==(i=e.statistics)&&void 0!==i?i:t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,re.Pg)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new Ae.A({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}(t,p)}w.includes("vat.dbf")||1!==p.bandCount||"u8"!==p.pixelType||y||(p.attributeTable=await this._fetchAuxiliaryTable(e),null!=p.attributeTable&&(p.keyProperties.DataType="thematic")),y&&this.updateImageSpaceRasterInfo(p),this.updateTileInfo()}async _validateOrFetchHeaderBuffer(e,t){let{fileChunk:i,fileOffset:n,posIFD:r}=e;return(r+8>=i.byteLength||r<0)&&(n=r+n,i=(await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:t})).data,r=0),{fileChunk:i,fileOffset:n,posIFD:r}}async _readIFDs(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,r=arguments.length>4?arguments[4]:void 0;if(!t.posIFD)return null;t=await this._validateOrFetchHeaderBuffer(t,r);const s=await this._readIFD(t,i,Je.NB,n,r);if(null===s||void 0===s||!s.ifd)throw new l.A("tiffraster:open","cannot parse tiff header. failed to open url "+this.url);if(e.push(s.ifd),!s.nextIFD)return null;t.posIFD=s.nextIFD-t.fileOffset,await this._readIFDs(e,t,i,n,r)}async _readIFD(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Je.NB,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,r=arguments.length>4?arguments[4]:void 0,{fileChunk:s,posIFD:a,fileOffset:o}=e;if(!e.fileChunk)return null;const l=(0,ze.JM)(s,t,a,o,i,n);if(l.success){var u,c;const e=[];if(null!==(u=l.ifd)&&void 0!==u&&u.forEach(t=>{t.values||e.push(t)}),e.length>0&&await this._fillOffsets(e,t,l.nextIFD,r),null!==(c=l.ifd)&&void 0!==c&&c.has("GEOKEYDIRECTORY")){const e=l.ifd.get("GEOKEYDIRECTORY"),i=null===e||void 0===e?void 0:e.values;if(i&&i.length>4){const n=i[0]+"."+i[1]+"."+i[2];a=e.valueOffset+6-o;const l=await this._validateOrFetchHeaderBuffer({fileChunk:s,posIFD:a,fileOffset:o},r),u=await this._readIFD(l,t,Je.YC,2,r);e.data=null===u||void 0===u?void 0:u.ifd,e.data&&e.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[n]})}}return l}return l.requiredBufferSize?(s=(await this.request(this.url,{range:{from:o,to:o+a+l.requiredBufferSize+8},responseType:"array-buffer",signal:r})).data,s.byteLength<a+l.requiredBufferSize?null:(e.fileChunk=s,e.fileOffset=o,this._readIFD(e,t,i,n,r))):null}async _fillOffsets(e,t,i,n){const r=e.filter(e=>null!=e.offlineOffsetSize);if(0===r.length)return;const s=r.map(e=>e.offlineOffsetSize),a=Math.min.apply(null,s.map(e=>e[0])),o=Math.max.apply(null,s.map(e=>e[0]+e[1]));let l=1===s.length||o-a<=this._bufferSize;if(!l&&s.length>1&&(s.sort((e,t)=>e[0]-t[0]),l=s.reduce((e,t)=>e===t[0]?t[0]+t[1]:0,s[0][0])===o),l){const e=await this._fetchOffsets(a,Math.max(o,a+this._bufferSize),n);return void r.forEach(i=>(0,ze.Cr)(e,t,i,a))}const u=r.map(async e=>{const i=e.offlineOffsetSize,r=await this._fetchOffsets(i[0],i[1]+i[0],n);(0,ze.Cr)(r,t,e,i[0])});await Promise.all(u)}async _fetchOffsets(e,t,i){const n=[],r=this._chunkSize,s=Math.ceil((t-e)/r);let a=e;for(let u=0;u<s;u++)n.push(this.request(this.url,{range:{from:a,to:u===s-1?t:a+r-1},responseType:"array-buffer",signal:i})),a+=r;const o=await Promise.all(n);if(1===s)return o[0].data;const l=new Uint8Array(t-e+1);for(let u=0;u<s;u++)l.set(new Uint8Array(o[u].data),u*r);return l.buffer}async _fetchRawTiffTile(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const s=this._getTileLocation(e,t,i,n);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:u}=s,c=a.map(e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:r.signal})),d=await Promise.all(c),f=d.map(e=>e.data.byteLength).reduce((e,t)=>e+t),h=1===d.length?d[0].data:new ArrayBuffer(f),p=[0],m=[0];if(d.length>1){const e=new Uint8Array(h);for(let t=0,i=0;t<d.length;t++){const n=d[t].data;e.set(new Uint8Array(n),i),p[t]=i,i+=n.byteLength,m[t]=n.byteLength}}const{blockWidth:v,blockHeight:g}=this.getBlockWidthHeight(e),y=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:u,offsets:p,sizes:m},width:v,height:g,planes:null,pixelType:null});if(null==y)return null;let w,x,b;if(o!==v||l!==g){let e=y.mask;if(e)for(w=0;w<g;w++)if(b=w*v,w<l)for(x=o;x<v;x++)e[b+x]=0;else for(x=0;x<v;x++)e[b+x]=0;else for(e=new Uint8Array(v*g),y.mask=e,w=0;w<l;w++)for(b=w*v,x=0;x<o;x++)e[b+x]=1}return y}_getTileLocation(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{firstPyramidLevel:r,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(r-1),{_headerInfo:o}=this;if(!o)return null;const l=n?o.maskIFDs[a]:0===a?null===o||void 0===o?void 0:o.ifds[0]:null===o||void 0===o?void 0:o.pyramidIFDs[a-1];if(!l)return null;const u=(0,ze.XO)(l,o),c=Ue(l,"TILEOFFSETS");if(void 0===c)return null;const d=Ue(l,"TILEBYTECOUNTS"),{minRow:f,minCol:h,maxRow:p,maxCol:m}=s[a];if(t>p||i>m||t<f||i<h)return null;const v=Ze(l,"IMAGEWIDTH"),g=Ze(l,"IMAGELENGTH"),y=Ze(l,"TILEWIDTH"),w=Ze(l,"TILELENGTH"),x=[];if(u){const{bandCount:e}=this.rasterInfo;for(let n=0;n<e;n++){const e=n*(p+1)*(m+1)+t*(m+1)+i;x[n]={from:c[e],to:c[e]+d[e]-1}}}else{const e=t*(m+1)+i;x.push({from:c[e],to:c[e]+d[e]-1})}for(let b=0;b<x.length;b++)if(null==x[b].from||!x[b].to||x[b].to<0)return null;return{ranges:x,ifd:l,actualTileWidth:i===m&&v%y||y,actualTileHeight:t===p&&g%w||w}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return ge(t)}catch(t){return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=Be.parse(t);return null!==i&&void 0!==i&&i.recordSet?oe.A.fromJSON(i.recordSet):null}catch(t){return null}}};(0,s.Cg)([(0,h.MZ)()],qe.prototype,"_files",void 0),(0,s.Cg)([(0,h.MZ)()],qe.prototype,"_headerInfo",void 0),(0,s.Cg)([(0,h.MZ)()],qe.prototype,"_bufferSize",void 0),(0,s.Cg)([(0,h.MZ)()],qe.prototype,"_chunkSize",void 0),(0,s.Cg)([(0,h.MZ)({type:String,json:{write:!0}})],qe.prototype,"datasetFormat",void 0),qe=(0,s.Cg)([(0,v.$)("esri.layers.support.rasterDatasets.TIFFRaster")],qe);const je=qe,He=new Map;He.set("MRF",{desc:"Meta Raster Format",constructor:Ne}),He.set("TIFF",{desc:"GeoTIFF",constructor:je}),He.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Oe}),He.set("JPG",{desc:"JPG Raster Format",constructor:xe}),He.set("PNG",{desc:"PNG Raster Format",constructor:xe}),He.set("GIF",{desc:"GIF Raster Format",constructor:xe}),He.set("BMP",{desc:"BMP Raster Format",constructor:xe}),He.set("CovJSON",{desc:"COVJSON Raster Format",constructor:ue}),He.set("MEMORY",{desc:"In Memory Raster Format",constructor:ae});class Ve{static get supportedFormats(){const e=new Set;return He.forEach((t,i)=>e.add(i)),e}static async open(e){var t,i;const{url:n,ioConfig:r,source:s,sourceJSON:a}=e;let o=null!==(t=e.datasetFormat)&&void 0!==t?t:null===r||void 0===r?void 0:r.datasetFormat;null==o&&(n.includes(".")?o=n.slice(n.lastIndexOf(".")+1).toUpperCase():"coverage"===(null===s||void 0===s||null===(i=s.type)||void 0===i?void 0:i.toLowerCase())?o="CovJSON":(null===s||void 0===s?void 0:s.extent)&&s.pixelblocks&&(o="MEMORY")),"OVR"===o||"TIF"===o?o="TIFF":"JPG"===o||"JPEG"===o||"JFIF"===o?o="JPG":"COVJSON"===o&&(o="CovJSON"),n.toLowerCase().includes("/imageserver")&&!n.toLowerCase().includes("/wcsserver")&&(o="RasterTileServer");const u={url:n,source:s,sourceJSON:a,datasetFormat:o,ioConfig:null!==r&&void 0!==r?r:{bandIds:null,sampling:null}};if(Object.keys(u).forEach(e=>{null==u[e]&&delete u[e]}),o){if(!this.supportedFormats.has(o))throw new l.A("rasterfactory:open","not a supported format "+o);if("CRF"===o)throw new l.A("rasterfactory:open","cannot open raster: ".concat(n));const t=new(0,He.get(o).constructor)(u);return await t.open({signal:e.signal}),t}const c=Array.from(He.keys()).filter(e=>"CovJSON"!==e&&"Memory"!==e);let d=0;const f=()=>{if(o=c[d++],!o)return null;if("CRF"===o)return null;const t=new(0,He.get(o).constructor)(u);return t.open({signal:e.signal}).then(()=>t).catch(()=>f())};return f()}static register(e,t,i){He.has(e.toUpperCase())||He.set(e.toUpperCase(),{desc:t,constructor:i})}}var Ge=i(81633),We=i(12482),Xe=i(30973),Ye=i(731);let $e=class extends((0,A.dM)((0,F.j)((0,T.q)((0,R.A)((0,_.H)((0,C.d)((0,S.o)((0,M.G)((0,P.e)((0,I.b)((0,O.J)((0,c.P)((0,o.OU)(b.A)))))))))))))){constructor(){super(...arguments),this._primaryRasters=[],this.graphicOrigin=new x(this),this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,d.sg)(async(e,t,n)=>{const{save:r,saveAs:s}=await i.e(964).then(i.bind(i,20964));switch(e){case 0:return r(this,t);case 1:return s(this,n,t)}})}normalizeCtorArgs(e,t){return"string"==typeof e?(0,r.A)({url:e},t):e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(d.QP).then(()=>this._openRaster(t))),Promise.resolve(this)}set elevationInfo(e){"relative-to-scene"!==(null===e||void 0===e?void 0:e.mode)&&this._set("elevationInfo",e),this._validateElevationInfo(e)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;const i=[(0,N.rZ)("Pixel Value"),(0,N.dy)("Raw Pixel Value")],n=null!==(e=null===(t=this.raster)||void 0===t?void 0:t.rasterInfo)&&void 0!==e?e:this.serviceRasterInfo,r=null===n||void 0===n?void 0:n.attributeTable;if(r){const e=(0,N.jC)(r);i.push(...e)}const s=null===n||void 0===n?void 0:n.dataType,a=null===n||void 0===n?void 0:n.multidimensionalInfo;if(("vector-magdir"===s||"vector-uv"===s)&&null!=a){var o;const e=null===(o=a.variables[0].unit)||void 0===o?void 0:o.trim(),t=(0,N.DV)(e),n=(0,N.y6)();i.push(t,n)}if(a){const e=(0,N.AL)(a);i.push(...e)}return i}get renderer(){return super.renderer}set renderer(e){super.renderer=e}createPopupTemplate(e){var t;const{rasterFields:i}=this,n=null!==(t=null===e||void 0===e?void 0:e.visibleFieldNames)&&void 0!==t?t:new Set(i.map(e=>{let{name:t}=e;return t}).filter(e=>e!==N.F_.rawServicePixelValue)),s=(0,Xe.tn)({fields:i,title:this.title},(0,r.A)((0,r.A)({},e),{},{visibleFieldNames:n})),{rasterInfo:a}=this.raster;return null!==s&&void 0!==s&&s.fieldInfos&&a&&(0,N.h4)(s.fieldInfos,a),s}async generateRasterInfo(e,t){var i;if(e=(0,p.PZ)(E.A,e),await this.load(),!e||"none"===(null===(i=e.functionName)||void 0===i?void 0:i.toLowerCase()))return this.serviceRasterInfo;try{const{rasterInfo:i}=await this._openFunctionRaster(e,t);return i}catch(Be){if(Be instanceof l.A)throw Be;throw new l.A("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(0,e)}async saveAs(e,t){return this._debouncedSaveOperations(1,t,e)}supportsWrite(){var e;const t=null!==(e=this._primaryRasters[0])&&void 0!==e?e:this.raster;return!!(this.loaded?"RasterTileServer"===t.datasetFormat&&("Raster"===t.tileType||"Map"===t.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))}write(e,t){if(this.supportsWrite())return super.write(e,t);if(null!==t&&void 0!==t&&t.messages){const e="".concat(t.origin,"/").concat(t.layerContainerType||"operational-layers");t.messages.push(new l.A("layer:unsupported","Layers (".concat(this.title,", ").concat(this.id,") of type '").concat(this.declaredClass,"' are not supported in the context of '").concat(e,"'"),{layer:this}))}return null}async _openRaster(e){var t;let i=!1;if(this.raster)await this._openFromRaster(this.raster,e),i=(0,L.qg)(this.raster),!i&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:t,rasterFunction:i,source:n}=this;if(!t&&!n)throw new l.A("imagery-tile-layer:open","missing url or source parameter");n?await this._openFromSource(n,e):i?await this._openFromUrlWithRasterFunction(t,i,e):await this._openFromUrl(t,e)}const n=this.raster.rasterInfo;if(!n)throw new l.A("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",i?n:this._primaryRasters[0].rasterInfo),this._set("spatialReference",n.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:(0,r.A)((0,r.A)({},this.sourceJSON),{},{minScale:0,maxScale:0});this.read(e,{origin:"service"})}else this.read({tileInfo:null===(t=this.serviceRasterInfo)||void 0===t?void 0:t.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,f.wB)(()=>this.customParameters,e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)}))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters=(0,L.pb)(e),this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,i){const n=[e];t&&(0,Ge.UD)(t.toJSON(),n);const s=await Promise.all(n.map(e=>Ve.open({url:e,sourceJSON:this.sourceJSON,ioConfig:(0,r.A)((0,r.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:i}))),a=s.findIndex(e=>null==e);if(a>-1)throw new l.A("imagery-tile-layer:open","cannot open raster: ".concat(n[a]));return this._primaryRasters=s,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const i=await Ve.open({url:e,sourceJSON:this.sourceJSON,ioConfig:(0,r.A)((0,r.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:t});if(null==i)throw new l.A("imagery-tile-layer:open","cannot open raster: ".concat(e));this._primaryRasters=[i],this.raster=i}async _openFromSource(e,t){var i;const n="the tiled imagery data source is not supported",s="coverage"===(null===(i=e.type)||void 0===i?void 0:i.toLowerCase())?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!s)throw new l.A("imagery-tile-layer:open",n);"MEMORY"===s&&(e=(0,r.A)((0,r.A)({},e),{},{pixelBlock:void 0,pixelBlocks:[e.pixelBlock]}));const a=await Ve.open({url:"",source:e,datasetFormat:s,ioConfig:(0,r.A)((0,r.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:t});if(null==a)throw new l.A("imagery-tile-layer:open",n);this._primaryRasters=[a],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=a}async _openFunctionRaster(e,t){var i,n;const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(e=>r[e.url]=e);const s=(0,Ge.vt)(null!==(i=null===(n=e.functionDefinition)||void 0===n?void 0:n.toJSON())&&void 0!==i?i:e.toJSON(),r),a=new B.A({rasterFunction:s});return await a.open(t),a}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(Be){Be instanceof l.A&&u.A.getLogger(this).error("imagery-tile-layer:open",Be.message),u.A.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}_validateElevationInfo(e){(0,We.XF)(u.A.getLogger(this),(0,We.$7)("ImageryTile layers","relative-to-scene",e)),(0,We.XF)(u.A.getLogger(this),(0,We.tW)("ImageryTile layers",e))}};(0,s.Cg)([(0,h.MZ)({clonable:!1})],$e.prototype,"_primaryRasters",void 0),(0,s.Cg)([(0,h.MZ)({type:Ye.A,value:null,json:{name:"layerDefinition.elevationInfo",write:!0,origins:{"portal-item":{read:!1,write:!1},"web-map":{read:!1,write:!1}}}})],$e.prototype,"elevationInfo",null),(0,s.Cg)([(0,h.MZ)({readOnly:!0,clonable:!1})],$e.prototype,"graphicOrigin",void 0),(0,s.Cg)([(0,h.MZ)(k.fV)],$e.prototype,"legendEnabled",void 0),(0,s.Cg)([(0,h.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],$e.prototype,"isReference",void 0),(0,s.Cg)([(0,h.MZ)({type:["show","hide"]})],$e.prototype,"listMode",void 0),(0,s.Cg)([(0,h.MZ)({json:{read:!0,write:!0}})],$e.prototype,"blendMode",void 0),(0,s.Cg)([(0,h.MZ)({type:E.A,json:{name:"renderingRule",write:!0}})],$e.prototype,"rasterFunction",void 0),(0,s.Cg)([(0,h.MZ)()],$e.prototype,"sourceJSON",void 0),(0,s.Cg)([(0,h.MZ)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],$e.prototype,"version",void 0),(0,s.Cg)([(0,h.MZ)({readOnly:!0,json:{read:!1}})],$e.prototype,"type",void 0),(0,s.Cg)([(0,h.MZ)({type:["ArcGISTiledImageServiceLayer"]})],$e.prototype,"operationalLayerType",void 0),(0,s.Cg)([(0,h.MZ)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],$e.prototype,"popupEnabled",void 0),(0,s.Cg)([(0,h.MZ)({type:a.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],$e.prototype,"popupTemplate",void 0),(0,s.Cg)([(0,h.MZ)({readOnly:!0})],$e.prototype,"defaultPopupTemplate",null),(0,s.Cg)([(0,h.MZ)(k.PY)],$e.prototype,"screenSizePerspectiveEnabled",void 0),(0,s.Cg)([(0,h.MZ)({readOnly:!0,type:[D.A]})],$e.prototype,"fields",void 0),(0,s.Cg)([(0,h.MZ)({readOnly:!0,type:[D.A]})],$e.prototype,"rasterFields",null),(0,s.Cg)([(0,h.MZ)({constructOnly:!0})],$e.prototype,"source",void 0),$e=(0,s.Cg)([(0,v.$)("esri.layers.ImageryTileLayer")],$e);const Ke=$e},56002:(e,t,i)=>{function n(e){let t,i,n=[],r=!1;return function(){for(var s=arguments.length,a=new Array(s),o=0;o<s;o++)a[o]=arguments[o];return r&&t===this&&function(e,t){if(e.length!==t.length)return!1;for(let i=0;i<e.length;++i)if(e[i]!==t[i])return!1;return!0}(a,n)||(i=e.apply(this,a),t=this,n=a,r=!0),i}}i.d(t,{B:()=>n})},75116:(e,t,i)=>{i.d(t,{A:()=>o});var n=i(6326),r=i(42553),s=i(46053),a=(i(81806),i(76460),i(47249),i(87990));let o=class extends r.o{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,n.Cg)([(0,s.MZ)()],o.prototype,"affectsPixelSize",null),(0,n.Cg)([(0,s.MZ)({json:{write:!0}})],o.prototype,"spatialReference",void 0),o=(0,n.Cg)([(0,a.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],o)},82356:(e,t,i)=>{i.d(t,{d:()=>T});var n,r,s=i(89379),a=i(6326),o=i(3825),l=i(91967),u=i(50076),c=i(54901),d=(i(81806),i(53521)),f=i(5457),h=i(50346),p=i(68134),m=i(52394),v=i(90534),g=i(46053),y=(i(76460),i(47249),i(87990)),w=i(11164),x=i(53084),b=i(97255),I=i(78393);class A{constructor(e){!function(e){if(null===e||void 0===e||!e.location)throw new u.A("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new u.A("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new u.A("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new u.A("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new u.A("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}(e);const{location:t,data:i}=e;this.location=Object.freeze((0,x.o8)(t));const n=this.location.width,r=this.location.height;let s=!0,a=!0;const o=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return e<=I.y9?t?new Array(e).fill(0):new Array(e):new Uint32Array(e)}(Math.ceil(n*r/32));let l=0;for(let u=0;u<i.length;u++){const e=u%32;i[u]?(a=!1,o[l]|=1<<e):s=!1,31===e&&++l}a?(this._availability="unavailable",this.byteSize=40):s?(this._availability="available",this.byteSize=40):(this._availability=o,this.byteSize=40+(0,b.Qf)(o))}getAvailability(e,t){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),n=i%32,r=i>>5,s=this._availability;return r<0||r>s.length?"unknown":s[r]&1<<n?"available":"unavailable"}static fromDefinition(e,t){const i=e.service.request||o.A,{row:n,col:r,width:a,height:l}=e,c={query:{f:"json"}};return t=t?(0,s.A)((0,s.A)({},c),t):c,i(function(e){var t;let i;if(null!==(t=e.service.tileServers)&&void 0!==t&&t.length){const t=e.service.tileServers;i="".concat(t&&t.length?t[e.row%t.length]:e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}else i="".concat(e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height);const n=e.service.query;return n&&(i="".concat(i,"?").concat(n)),i}(e),t).then(e=>e.data).catch(e=>{var t;if(422===(null===e||void 0===e||null===(t=e.details)||void 0===t?void 0:t.httpStatus))return{location:{top:n,left:r,width:a,height:l},valid:!0,data:new Array(a*l).fill(0)};throw e}).then(e=>{if(e.location&&(e.location.top!==n||e.location.left!==r||e.location.width!==a||e.location.height!==l))throw new u.A("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:n,left:r,width:a,height:l}});return A.fromJSON(e)})}static fromJSON(e){return Object.freeze(new A(e))}}function C(e){return"".concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}function S(e,t,i){return new u.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})}let T=(n=class extends l.A{constructor(e){super(e),this._pendingTilemapRequests={},this.request=o.A,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new d.q(2097152),this.addHandles((0,p.wB)(()=>{const{layer:e}=this;return[null===e||void 0===e?void 0:e.parsedUrl,null===e||void 0===e?void 0:e.tileServers,null===e||void 0===e?void 0:e.apiKey,null===e||void 0===e?void 0:e.customParameters]},()=>this._initializeTilemapDefinition(),p.Vh))}get effectiveMinLOD(){var e;return null!==(e=this.minLOD)&&void 0!==e?e:this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){var e;return null!==(e=this.maxLOD)&&void 0!==e?e:this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const n=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return n?n.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,n){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(S(e,t,i)):this._fetchTilemap(e,t,i,n).catch(e=>e).then(n=>{if(n instanceof A){const r=n.getAvailability(t,i);if("unavailable"===r)throw S(e,t,i);return r}if((0,h.zf)(n))throw n;return"unknown"})}fetchAvailabilityUpsample(e,t,i,n,r){n.level=e,n.row=t,n.col=i;const s=this.layer.tileInfo;s.updateTileInfo(n);const a=this.fetchAvailability(e,t,i,r).catch(e=>{if((0,h.zf)(e))throw e;if(s.upsampleTile(n))return this.fetchAvailabilityUpsample(n.level,n.row,n.col,n,r);throw e});return this._fetchAvailabilityUpsamplePrefetch(e,t,i,r,a),a}async _fetchAvailabilityUpsamplePrefetch(e,t,i,n,a){if(!this._prefetchingEnabled)return;const o="prefetch-".concat(e,"-").concat(t,"-").concat(i);if(this.hasHandles(o))return;const l=new AbortController;a.then(()=>l.abort(),()=>l.abort());let u=!1;const d=(0,c.hA)(()=>{u||(u=!0,l.abort())});if(this.addHandles(d,o),await(0,m.md)(10,l.signal).catch(()=>{}),u||(u=!0,this.removeHandles(o)),(0,h.G4)(l))return;const f=new w.U(e,t,i),p=(0,s.A)((0,s.A)({},n),{},{signal:l.signal}),v=this.layer.tileInfo;for(let s=0;r._prefetches.length<r._maxPrefetch&&v.upsampleTile(f);++s){const e=this.fetchAvailability(f.level,f.row,f.col,p);r._prefetches.push(e);const t=()=>{r._prefetches.removeUnordered(e)};e.then(t,t)}}static cleanupTilemapCache(){this._prefetches.prune()}_fetchTilemap(e,t,i,n){var r;if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new u.A("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")));const a=this._tmpTilemapDefinition,o=this._tilemapFromCache(e,t,i,a);if(o)return Promise.resolve(o);const l=null===(r=n)||void 0===r?void 0:r.signal;return n=(0,s.A)((0,s.A)({},n),{},{signal:null}),new Promise((e,t)=>{(0,h.u7)(l,()=>t((0,h.NK)()));const i=C(a);let r=this._pendingTilemapRequests[i];if(!r){r=A.fromDefinition(a,n).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>{delete this._pendingTilemapRequests[i]};this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)})}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:n}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:(0,v.x0)((0,s.A)((0,s.A)((0,s.A)({},t.query),n),{},{token:null!==i&&void 0!==i?i:null===(e=t.query)||void 0===e?void 0:e.token})),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,n){n.level=e,n.row=t-t%this.size,n.col=i-i%this.size;const r=C(n);return this._tilemapCache.get(r)}get test(){}},r=n,n._maxPrefetch=4,n._prefetches=new f.A({initialSize:r._maxPrefetch}),n);(0,a.Cg)([(0,g.MZ)({constructOnly:!0})],T.prototype,"layer",void 0),(0,a.Cg)([(0,g.MZ)({constructOnly:!0})],T.prototype,"minLOD",void 0),(0,a.Cg)([(0,g.MZ)({constructOnly:!0})],T.prototype,"maxLOD",void 0),(0,a.Cg)([(0,g.MZ)({constructOnly:!0})],T.prototype,"request",void 0),(0,a.Cg)([(0,g.MZ)({constructOnly:!0})],T.prototype,"size",void 0),T=r=(0,a.Cg)([(0,y.$)("esri.layers.support.TilemapCache")],T)}}]);
//# sourceMappingURL=7197.0045190d.chunk.js.map