"use strict";(self.webpackChunkmmsp_land_hl=self.webpackChunkmmsp_land_hl||[]).push([[4e3,7218,7995],{20176:(e,t,n)=>{n.d(t,{N3:()=>l,Om:()=>a});var s=n(89379),r=n(97255),i=n(90321),o=n(1484);class a{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2?arguments[2]:void 0,s=arguments.length>3?arguments[3]:void 0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this.geometry=e,this.attributes=t,this.centroid=n,this.objectId=s,this.displayId=r}static fromJSON(e){const t=e.geometry?o.A.fromJSON(e.geometry):null,n=e.centroid?o.A.fromJSON(e.centroid):null,s=e.objectId;return new a(t,e.attributes,n,s)}weakClone(){const e=new a(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e}clone(){var e,t;const n=null===(e=this.geometry)||void 0===e?void 0:e.clone(),r=new a(n,(0,s.A)({},this.attributes),null===(t=this.centroid)||void 0===t?void 0:t.clone(),this.objectId);return r.displayId=this.displayId,r}ensureCentroid(e){var t;return null!==(t=this.centroid)&&void 0!==t||(this.centroid=(0,i.Q)(new o.A,this.geometry,e.hasZ,e.hasM)),this.centroid}get usedMemory(){var e,t;return 128+(0,r.lM)(this.attributes)+(null!==(e=null===(t=this.geometry)||void 0===t?void 0:t.usedMemory)&&void 0!==e?e:0)}}function l(e){var t;return!(null===(t=e.geometry)||void 0===t||null===(t=t.coords)||void 0===t||!t.length)}},20904:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var s=n(89379),r=n(4212),i=n(90632),o=n(13312),a=n(86729),l=n(99784),u=n(98618),h=n(44135);function c(e,t){return t}function d(e,t,n,s){switch(n){case 0:return y(e,t+s,0);case 1:return"lowerLeft"===e.originPosition?y(e,t+s,1):function(e,t,n){let{translate:s,scale:r}=e;return s[n]-t*r[n]}(e,t+s,1)}}function f(e,t,n,s){return 2===n?y(e,t,2):d(e,t,n,s)}function m(e,t,n,s){return 2===n?y(e,t,3):d(e,t,n,s)}function p(e,t,n,s){return 3===n?y(e,t,3):f(e,t,n,s)}function y(e,t,n){let{translate:s,scale:r}=e;return s[n]+t*r[n]}class g{constructor(e){this._options=e,this.geometryTypes=["point","multipoint","polyline","polygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=c,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{},this._missingAttributes=[]}get missingAttributes(){return this._missingAttributes}createFeatureResult(){return new l.jy}finishFeatureResult(e){if(this._options.applyTransform&&(e.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!e.hasZ)return;const t=(0,a.N)(e.geometryType,this._options.sourceSpatialReference,e.spatialReference);if(null!=t)for(const n of e.features)t(n.geometry)}createSpatialReference(){return new o.A}addField(e,t){e.fields.push(h.A.fromJSON(t));const n=e.fields.map(e=>e.name);this._attributesConstructor=function(){for(const e of n)this[e]=null}}addFeature(e,t){const n=this._options.maxStringAttributeLength,s=this._options.maxStringAttributeFields;(0,l.Uz)(t.attributes,s,n,n=>{const s=t.attributes[e.objectIdFieldName];null!=s&&this._missingAttributes.push({objectId:s,attribute:n})}),e.features.push(t)}addQueryGeometry(e,t){const{queryGeometry:n,queryGeometryType:s}=t,r=this._transform?(0,u.Ch)(n.clone(),n,!1,!1,this._transform):n.clone(),i=(0,u.zv)(r,s,!1,!1);switch(s){case"esriGeometryPoint":i.type="point";break;case"esriGeometryPolygon":i.type="polygon";break;case"esriGeometryPolyline":i.type="polyline";break;case"esriGeometryMultipoint":i.type="multipoint"}e.queryGeometryType=s,e.queryGeometry=i}prepareFeatures(e){var t;switch(this._transform=null!==(t=e.transform)&&void 0!==t?t:null,this._options.applyTransform&&e.transform&&(this._applyTransform=this._deriveApplyTransform(e)),this._vertexDimension=2,e.hasZ&&this._vertexDimension++,e.hasM&&this._vertexDimension++,e.geometryType){case"point":this.addCoordinate=(e,t,n)=>this.addCoordinatePoint(e,t,n),this.createGeometry=e=>this.createPointGeometry(e);break;case"polygon":this.addCoordinate=(e,t,n)=>this._addCoordinatePolygon(e,t,n),this.createGeometry=e=>this._createPolygonGeometry(e);break;case"polyline":this.addCoordinate=(e,t,n)=>this._addCoordinatePolyline(e,t,n),this.createGeometry=e=>this._createPolylineGeometry(e);break;case"multipoint":this.addCoordinate=(e,t,n)=>this._addCoordinateMultipoint(e,t,n),this.createGeometry=e=>this._createMultipointGeometry(e);break;case"mesh":case"extent":break;default:(0,r.Xb)(e.geometryType)}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,new l.HP((0,i.c)(),null,new this._attributesConstructor)}allocateCoordinates(){const e=this._lengths.reduce((e,t)=>e+t,0);this._coordinateBuffer=new Float64Array(e*this._vertexDimension),this._coordinateBufferPtr=0}addLength(e,t){0===this._lengths.length&&(this._toAddInCurrentPath=t),this._lengths.push(t)}createPointGeometry(e){const t={type:"point",x:0,y:0,spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM};return t.hasZ&&(t.z=0),t.hasM&&(t.m=0),t}addCoordinatePoint(e,t,n){const s=this._transform?this._applyTransform(this._transform,t,n,0):t;if(null!=s)switch(n){case 0:e.x=s;break;case 1:e.y=s;break;case 2:e.hasZ?e.z=s:e.m=s;break;case 3:e.m=s}}_transformPathLikeValue(e,t){let n=0;return t<=1&&(n=this._previousCoordinate[t],this._previousCoordinate[t]+=e),this._transform?this._applyTransform(this._transform,e,t,n):e}_addCoordinatePolyline(e,t,n){this._dehydratedAddPointsCoordinate(e.paths,t,n)}_addCoordinatePolygon(e,t,n){this._dehydratedAddPointsCoordinate(e.rings,t,n)}_addCoordinateMultipoint(e,t,n){0===n&&e.points.push([]);const s=this._transformPathLikeValue(t,n);e.points[e.points.length-1].push(s)}_createPolygonGeometry(e){return{type:"polygon",rings:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createPolylineGeometry(e){return{type:"polyline",paths:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createMultipointGeometry(e){return{type:"multipoint",points:[],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_dehydratedAddPointsCoordinate(e,t,n){0===n&&0===this._toAddInCurrentPath--&&(e.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);const s=this._transformPathLikeValue(t,n),r=e[e.length-1],i=this._coordinateBuffer;if(i){if(0===n){const e=this._coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT;r.push(new Float64Array(i.buffer,e,this._vertexDimension))}i[this._coordinateBufferPtr++]=s}}_deriveApplyTransform(e){const{hasZ:t,hasM:n}=e;return t&&n?p:t?f:n?m:d}}var _=n(89122);class I{_parseFeatureQuery(e){var t;const n=new g(e.options),r=(0,_.m)(e.buffer,n),i=(0,s.A)((0,s.A)({},r),{},{spatialReference:null===(t=r.spatialReference)||void 0===t?void 0:t.toJSON(),fields:r.fields?r.fields.map(e=>e.toJSON()):void 0,missingAttributes:n.missingAttributes});return Promise.resolve(i)}}function b(){return new I}},28660:(e,t,n)=>{n.d(t,{B1:()=>i,VS:()=>o,an:()=>r,iW:()=>a});var s=n(81806);function r(){return(0,s.A)("curve-densification-coarse-segments")}function i(){return(0,s.A)("curve-densification-max-segments")}function o(){return(0,s.A)("curve-densification-min-segments")}function a(){return(0,s.A)("curve-densification-pixel-deviation")}},74e3:(e,t,n)=>{n.d(t,{CI:()=>i,fk:()=>o});n(81806);var s=n(15941),r=n(80963);function i(e,t){return e===t||null!=e&&null!=t&&(0,r.aI)(e.spatialReference,t.spatialReference)&&e.x===t.x&&e.y===t.y&&e.z===t.z&&e.m===t.m}function o(e,t,n){var i,o,a,l;return e===t||null!=e&&null!=t&&(0,r.aI)(e.spatialReference,t.spatialReference)&&(0,s.Sp)(e.x,t.x,n)&&(0,s.Sp)(e.y,t.y,n)&&(0,s.Sp)(null!==(i=e.z)&&void 0!==i?i:0,null!==(o=t.z)&&void 0!==o?o:0,n)&&(0,s.Sp)(null!==(a=e.m)&&void 0!==a?a:0,null!==(l=t.m)&&void 0!==l?l:0,n)}},75146:(e,t,n)=>{n.d(t,{A:()=>s});class s{constructor(){this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new s;return e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},90321:(e,t,n)=>{function s(e,t){return e?t?4:3:t?3:2}function r(e,t,n,r){if(null===t||void 0===t||!t.lengths.length)return null;e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0);const a=e.coords,l=[],u=n?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:h,coords:c}=t,d=s(n,r);let f=0;for(const s of h){const e=i(u,c,f,s,n,r);e&&l.push(e),f+=s*d}if(l.sort((e,t)=>{let s=e[2]-t[2];return 0===s&&n&&(s=e[4]-t[4]),s}),l.length){let e=6*l[0][2];a[0]=l[0][0]/e,a[1]=l[0][1]/e,n&&(e=6*l[0][4],a[2]=0!==e?l[0][3]/e:0),(a[0]<u[0]||a[0]>u[1]||a[1]<u[2]||a[1]>u[3]||n&&(a[2]<u[4]||a[2]>u[5]))&&(a.length=0)}if(!a.length){const e=t.lengths[0]?o(c,0,h[0],n,r):null;if(!e)return null;a[0]=e[0],a[1]=e[1],n&&e.length>2&&(a[2]=e[2])}return e}function i(e,t,n,r,i,o){const a=s(i,o);let l=n,u=n+a,h=0,c=0,d=0,f=0,m=0;for(let s=0,y=r-1;s<y;s++,l+=a,u+=a){const n=t[l],s=t[l+1],r=t[l+2],o=t[u],a=t[u+1],p=t[u+2];let y=n*a-o*s;f+=y,h+=(n+o)*y,c+=(s+a)*y,i&&(y=n*p-o*r,d+=(r+p)*y,m+=y),n<e[0]&&(e[0]=n),n>e[1]&&(e[1]=n),s<e[2]&&(e[2]=s),s>e[3]&&(e[3]=s),i&&(r<e[4]&&(e[4]=r),r>e[5]&&(e[5]=r))}if(f>0&&(f*=-1),m>0&&(m*=-1),!f)return null;const p=[h,c,.5*f];return i&&(p[3]=d,p[4]=.5*m),p}function o(e,t,n,r,i){const o=s(r,i);let c=t,d=t+o,f=0,m=0,p=0,y=0;for(let s=0,g=n-1;s<g;s++,c+=o,d+=o){const t=e[c],n=e[c+1],s=e[c+2],i=e[d],o=e[d+1],g=e[d+2],_=r?l(t,n,s,i,o,g):a(t,n,i,o);if(_)if(f+=_,r){const e=h(t,n,s,i,o,g);m+=_*e[0],p+=_*e[1],y+=_*e[2]}else{const e=u(t,n,i,o);m+=_*e[0],p+=_*e[1]}}return f>0?r?[m/f,p/f,y/f]:[m/f,p/f]:n>0?r?[e[t],e[t+1],e[t+2]]:[e[t],e[t+1]]:null}function a(e,t,n,s){const r=n-e,i=s-t;return Math.sqrt(r*r+i*i)}function l(e,t,n,s,r,i){const o=s-e,a=r-t,l=i-n;return Math.sqrt(o*o+a*a+l*l)}function u(e,t,n,s){return[e+.5*(n-e),t+.5*(s-t)]}function h(e,t,n,s,r,i){return[e+.5*(s-e),t+.5*(r-t),n+.5*(i-n)]}n.d(t,{Q:()=>r})},99784:(e,t,n)=>{n.d(t,{HP:()=>a,N3:()=>l,RW:()=>f,Uz:()=>m,gR:()=>h,iQ:()=>d,jy:()=>u,w9:()=>c});n(81806);var s=n(97255),r=(n(13312),n(42294)),i=n(2413),o=(n(76279),n(31608),n(44135),n(28660));n(74e3);class a{constructor(e,t,n){this.uid=e,this.geometry=t,this.attributes=n,this.visible=!0,this.objectId=null,this.centroid=null}}function l(e){return null!=e.geometry}class u{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}function h(e){if(null==e)return 0;switch(e.type){case"point":return s.qK+10+8+24;case"polyline":case"polygon":{let t=0;const n=2+(e.hasZ?1:0)+(e.hasM?1:0),r="polyline"===e.type?e.paths:e.rings,i="polyline"===e.type?e.curvePaths:e.curveRings;if(null!==i&&void 0!==i&&i.length){const e=3*(0,o.B1)()*128;t=8*e*n+128*e+32*(r.length+1)}else t=(0,s.Qh)(r);return s.qK+64+t+34}case"multipoint":{const t=(0,s.Qh)(e.points);return s.qK+t+64+34+32}case"extent":return s.qK+10+64+34;case"mesh":{const t=e.vertexAttributes;return s.qK+(0,s.Qf)(t.position,t.normal,t.uv,t.tangent)}default:return s.qK}}function c(e,t){switch((0,r.Ie)(t),"mesh"===e.type&&(e=e.extent),e.type){case"point":t[0]=t[3]=e.x,t[1]=t[4]=e.y,e.hasZ&&(t[2]=t[5]=e.z);break;case"polyline":for(let n=0;n<e.paths.length;n++)(0,r.Jf)(t,e.paths[n],!!e.hasZ);break;case"polygon":for(let n=0;n<e.rings.length;n++)(0,r.Jf)(t,e.rings[n],!!e.hasZ);break;case"multipoint":(0,r.Jf)(t,e.points,!!e.hasZ);break;case"extent":t[0]=e.xmin,t[1]=e.ymin,t[3]=e.xmax,t[4]=e.ymax,null!=e.zmin&&(t[2]=e.zmin),null!=e.zmax&&(t[5]=e.zmax)}return t}function d(e,t){switch((0,i.Ie)(t),"mesh"===e.type&&(e=e.extent),e.type){case"point":t[0]=t[2]=e.x,t[1]=t[3]=e.y;break;case"polyline":for(let n=0;n<e.paths.length;n++)(0,i.Jf)(t,e.paths[n]);break;case"polygon":for(let n=0;n<e.rings.length;n++)(0,i.Jf)(t,e.rings[n]);break;case"multipoint":(0,i.Jf)(t,e.points);break;case"extent":t[0]=e.xmin,t[1]=e.ymin,t[2]=e.xmax,t[3]=e.ymax}}function f(e,t){return null!=e.objectId?e.objectId:e.attributes&&t?e.attributes[t]:null}function m(e,t,n,s){if(null!==t&&void 0!==t&&t.size&&null!=n&&e)for(const r in e){if(!t.has(r))continue;const i=e[r];"string"==typeof i&&i.length>n&&(s(r),e[r]="")}}}}]);
//# sourceMappingURL=7218.f13981d2.chunk.js.map